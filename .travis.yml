env:
  matrix:
    - PYTHON_VERSION="3.6.0"
    - PYTHON_VERSION="3.6.1"
    - PYTHON_VERSION="3.6.2"
    - PYTHON_VERSION="3.6.3"
    - PYTHON_VERSION="3.6.4"
    - PYTHON_VERSION="3.6.5"
    - PYTHON_VERSION="3.6.6"
    - PYTHON_VERSION="3.7.0"
    - PYTHON_VERSION="3.7.1"
  global:
    - PYFUNCEBLE_AUTO_CONFIGURATION="PyFunceble"

language: generic
sudo: false

os:
  - linux
  - osx

matrix:
  fast_finish: true

install:
  - export PATH="${HOME}/miniconda/bin:${PATH}"
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; else wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - bash miniconda.sh -b -p ${HOME}/miniconda
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q -n test-environment python="${PYTHON_VERSION}"
  - source activate test-environment
  - python -VV
  - pip --version
  - pip install pylint coverage coveralls

script:
  - python setup.py install
  - coverage run setup.py test
  - echo "Lint PyFunceble" && pylint PyFunceble
  - echo "Lint tests" && pylint tests/*.py
  - PyFunceble -v
  - PyFunceble --clean
  - PyFunceble --clean-all
  - rm -R output && PyFunceble --directory-structure && ls -al output
  - PyFunceble -ex -d github.com
  - PyFunceble -ex -s -f .travis/list_to_test
  - PyFunceble -ex --syntax -f .travis/adblock_to_test
  - PyFunceble -ex -f .travis/list_to_test --json --plain
  - PyFunceble -ex -f .travis/list_to_test # Normally, all inactive are not tested anymore.
  - PyFunceble -ex --database -f .travis/list_to_test # And they will be retested.
  - PyFunceble -ex --database --filter "\.info$" -f .travis/list_to_test # Only .info domains should be tested.
  - PyFunceble -ex --adblock -a -f .travis/adblock_to_test
  - PyFunceble -ex --link https://raw.githubusercontent.com/FadeMind/hosts.extras/master/UncheckyAds/hosts

after_success:
  - coveralls

notifications:
  on_success: change
  on_failure: always
